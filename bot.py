import os
import json
import requests
from fastapi import FastAPI, Request
from telegram import Update
from telegram.ext import ApplicationBuilder, Application

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
RENDER_EXTERNAL_HOSTNAME = os.getenv("RENDER_EXTERNAL_HOSTNAME")

# ‚úÖ –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
print("üì¶ TELEGRAM_TOKEN:", TELEGRAM_TOKEN[:10] if TELEGRAM_TOKEN else "‚ùå None", "...")
print("üåê RENDER_EXTERNAL_HOSTNAME:", RENDER_EXTERNAL_HOSTNAME or "‚ùå None")


# –•–µ–Ω–¥–ª–µ—Ä—ã
from handlers.start import handler as start_handler
# from handlers.semantics import handler as semantics_handler
# from handlers.serp_fetch import handler as serp_handler
# from handlers.stats import handler as stats_handler
# from handlers.admin import handler as admin_handler
from handlers.assistant import handler as assistant_handler

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
RENDER_EXTERNAL_HOSTNAME = os.getenv("RENDER_EXTERNAL_HOSTNAME")

# –§–æ—Ä–º–∏—Ä—É–µ–º Webhook URL
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"https://{RENDER_EXTERNAL_HOSTNAME}{WEBHOOK_PATH}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º FastAPI
app = FastAPI()

# –°–æ–∑–¥–∞—ë–º Telegram-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
tg_app: Application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
tg_app.add_handler(start_handler)
# tg_app.add_handler(semantics_handler)
# tg_app.add_handler(serp_handler)
# tg_app.add_handler(stats_handler)
# tg_app.add_handler(admin_handler)
tg_app.add_handler(assistant_handler)

# –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî Telegram –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Webhook
@app.on_event("startup")
async def on_startup():
    print("üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é webhook:", WEBHOOK_URL)
    await tg_app.bot.set_webhook(url=WEBHOOK_URL)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Telegram
@app.post("/webhook")
async def telegram_webhook(request: Request):
    try:
        body = await request.body()
        print("üì• –ü—Ä–∏—à—ë–ª raw webhook:", body[:200])
        return {"status": "ok"}
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è webhook:", e)
        return {"status": "error", "message": str(e)}


print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ Webhook")
